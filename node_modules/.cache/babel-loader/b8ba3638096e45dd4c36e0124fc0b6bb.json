{"ast":null,"code":"import React from'react';import{makeStyles}from'@material-ui/core/styles';import Card from'@material-ui/core/Card';import CardActionArea from'@material-ui/core/CardActionArea';import CardActions from'@material-ui/core/CardActions';import CardContent from'@material-ui/core/CardContent';import CardMedia from'@material-ui/core/CardMedia';import Button from'@material-ui/core/Button';import Typography from'@material-ui/core/Typography';import Avatar from'@material-ui/core/Avatar';import AvatarGroup from'@material-ui/lab/AvatarGroup';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({personOuterCard:{maxWidth:345,margin:\"auto\",paddingBottom:\"40px\"},media:{height:300},signal:{margin:'auto',backgroundColor:\"#cddc39\"},carouselDivider:{margin:\"10px 5px 10px 5px\"},personName:{color:\"rgba(255, 255, 255, 0.9)\",marginRight:\"20px\",marginLeft:\"20px\"},organizationMembers:{width:\"144px\",margin:\"auto\"}});export default function OrganizationCard(props){var classes=useStyles();return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(Card,{className:classes.personOuterCard,children:[/*#__PURE__*/_jsxs(CardActionArea,{children:[props.picture?/*#__PURE__*/_jsx(CardMedia,{className:classes.media,image:props.picture,title:props.name}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{className:classes.personName,gutterBottom:true,variant:\"h5\",component:\"h2\",children:props.name}),props.members.length>0?/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Typography,{className:classes.personDescription,variant:\"body2\",color:\"textSecondary\",component:\"p\",children:\"You would be working with:\"}),/*#__PURE__*/_jsx(AvatarGroup,{className:classes.organizationMembers,max:4,children:props.members.map(function(member){return/*#__PURE__*/_jsx(Avatar,{alt:member.name,src:member.picture},member.subjectId+props.id);})})]}):/*#__PURE__*/_jsx(React.Fragment,{})]})]}),/*#__PURE__*/_jsx(CardActions,{children:/*#__PURE__*/_jsx(Button,{className:classes.signal,variant:\"contained\",children:\"Signal\"})})]})});}","map":{"version":3,"sources":["/Users/juanfranciscolasodelgado/development/torre-tech-test/torre-front/src/components/cards/organization/OrganizationCard.jsx"],"names":["React","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Avatar","AvatarGroup","useStyles","personOuterCard","maxWidth","margin","paddingBottom","media","height","signal","backgroundColor","carouselDivider","personName","color","marginRight","marginLeft","organizationMembers","width","OrganizationCard","props","classes","picture","name","members","length","personDescription","map","member","subjectId","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,C,6IAEA,GAAMC,CAAAA,SAAS,CAAGV,UAAU,CAAC,CAC3BW,eAAe,CAAE,CACfC,QAAQ,CAAE,GADK,CAEfC,MAAM,CAAE,MAFO,CAGfC,aAAa,CAAE,MAHA,CADU,CAM3BC,KAAK,CAAE,CACLC,MAAM,CAAE,GADH,CANoB,CAS3BC,MAAM,CAAE,CACNJ,MAAM,CAAE,MADF,CAENK,eAAe,CAAE,SAFX,CATmB,CAa3BC,eAAe,CAAE,CACbN,MAAM,CAAE,mBADK,CAbU,CAgB3BO,UAAU,CAAE,CACVC,KAAK,CAAE,0BADG,CAEVC,WAAW,CAAE,MAFH,CAGVC,UAAU,CAAE,MAHF,CAhBe,CAqB3BC,mBAAmB,CAAE,CACnBC,KAAK,CAAE,OADY,CAEnBZ,MAAM,CAAE,MAFW,CArBM,CAAD,CAA5B,CA2BA,cAAe,SAASa,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAC9C,GAAMC,CAAAA,OAAO,CAAGlB,SAAS,EAAzB,CAEA,mBACE,KAAC,KAAD,CAAO,QAAP,wBACI,MAAC,IAAD,EAAM,SAAS,CAAEkB,OAAO,CAACjB,eAAzB,wBACI,MAAC,cAAD,YAEQgB,KAAK,CAACE,OAAN,cACA,KAAC,SAAD,EACA,SAAS,CAAED,OAAO,CAACb,KADnB,CAEA,KAAK,CAAEY,KAAK,CAACE,OAFb,CAGA,KAAK,CAAEF,KAAK,CAACG,IAHb,EADA,cAKI,kBAPZ,cAUI,MAAC,WAAD,yBACA,KAAC,UAAD,EAAY,SAAS,CAAEF,OAAO,CAACR,UAA/B,CAA2C,YAAY,KAAvD,CAAwD,OAAO,CAAC,IAAhE,CAAqE,SAAS,CAAC,IAA/E,UACKO,KAAK,CAACG,IADX,EADA,CAIEH,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAuB,CAAvB,cACE,MAAC,KAAD,CAAO,QAAP,yBACI,KAAC,UAAD,EAAY,SAAS,CAAEJ,OAAO,CAACK,iBAA/B,CAAkD,OAAO,CAAC,OAA1D,CAAkE,KAAK,CAAC,eAAxE,CAAwF,SAAS,CAAC,GAAlG,wCADJ,cAII,KAAC,WAAD,EAAa,SAAS,CAAEL,OAAO,CAACJ,mBAAhC,CAAqD,GAAG,CAAE,CAA1D,UAEQG,KAAK,CAACI,OAAN,CAAcG,GAAd,CAAmB,SAACC,MAAD,qBACf,KAAC,MAAD,EAA0C,GAAG,CAAEA,MAAM,CAACL,IAAtD,CAA4D,GAAG,CAAEK,MAAM,CAACN,OAAxE,EAAaM,MAAM,CAACC,SAAP,CAAmBT,KAAK,CAACU,EAAtC,CADe,EAAnB,CAFR,EAJJ,GADF,cAaE,KAAC,KAAD,CAAO,QAAP,IAjBJ,GAVJ,GADJ,cAiCI,KAAC,WAAD,wBACI,KAAC,MAAD,EAAQ,SAAS,CAAET,OAAO,CAACX,MAA3B,CAAmC,OAAO,CAAC,WAA3C,oBADJ,EAjCJ,GADJ,EADF,CA0CD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\n\nconst useStyles = makeStyles({\n  personOuterCard: {\n    maxWidth: 345,\n    margin: \"auto\",\n    paddingBottom: \"40px\"\n  },\n  media: {\n    height: 300,\n  },\n  signal: {\n    margin: 'auto',\n    backgroundColor: \"#cddc39\",\n  },\n  carouselDivider: {\n      margin: \"10px 5px 10px 5px\"\n  },\n  personName: {\n    color: \"rgba(255, 255, 255, 0.9)\",\n    marginRight: \"20px\",\n    marginLeft: \"20px\"\n  },\n  organizationMembers: {\n    width: \"144px\",\n    margin: \"auto\"\n  }\n});\n\nexport default function OrganizationCard(props) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n        <Card className={classes.personOuterCard}>\n            <CardActionArea>\n                {(\n                    props.picture?\n                    <CardMedia\n                    className={classes.media}\n                    image={props.picture}\n                    title={props.name}\n                    />: <></>\n                )}\n                \n                <CardContent>\n                <Typography className={classes.personName} gutterBottom variant=\"h5\" component=\"h2\">\n                    {props.name}\n                </Typography>\n                {(props.members.length > 0 ?\n                    <React.Fragment>\n                        <Typography className={classes.personDescription} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        You would be working with:\n                        </Typography>\n                        <AvatarGroup className={classes.organizationMembers} max={4}>\n                            {(\n                                props.members.map( (member) =>\n                                    <Avatar key={member.subjectId + props.id} alt={member.name} src={member.picture} />\n                                )\n                            )}\n                        </AvatarGroup>\n                    </React.Fragment>:\n                    <React.Fragment></React.Fragment>\n                )}\n                \n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button className={classes.signal} variant=\"contained\">Signal</Button>\n            </CardActions>\n        </Card>\n    </React.Fragment>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}