{"ast":null,"code":"var _jsxFileName = \"/Users/juanfranciscolasodelgado/development/torre-tech-test/torre-front/src/components/cards/organization/OrganizationCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  personOuterCard: {\n    maxWidth: 345,\n    margin: auto,\n    paddingBottom: \"40px\"\n  },\n  media: {\n    height: 300\n  },\n  signal: {\n    margin: 'auto',\n    backgroundColor: \"#cddc39\"\n  },\n  carouselDivider: {\n    margin: \"10px 5px 10px 5px\"\n  },\n  personName: {\n    color: \"rgba(255, 255, 255, 0.9)\",\n    marginRight: \"20px\",\n    marginLeft: \"20px\"\n  },\n  organizationMembers: {\n    width: \"144px\",\n    margin: \"auto\"\n  }\n});\nexport default function OrganizationCard(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.personOuterCard,\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.media,\n          image: props.picture,\n          title: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.personName,\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            children: props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), props.members.length > 0 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.personDescription,\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: \"You would be working with:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(AvatarGroup, {\n              className: classes.organizationMembers,\n              max: 4,\n              children: props.members.map(member => /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: member.name,\n                src: member.picture\n              }, member.subjectId + props.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.signal,\n          variant: \"contained\",\n          children: \"Signal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrganizationCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = OrganizationCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganizationCard\");","map":{"version":3,"sources":["/Users/juanfranciscolasodelgado/development/torre-tech-test/torre-front/src/components/cards/organization/OrganizationCard.jsx"],"names":["React","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Avatar","AvatarGroup","useStyles","personOuterCard","maxWidth","margin","auto","paddingBottom","media","height","signal","backgroundColor","carouselDivider","personName","color","marginRight","marginLeft","organizationMembers","width","OrganizationCard","props","classes","picture","name","members","length","personDescription","map","member","subjectId","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\n\nconst useStyles = makeStyles({\n  personOuterCard: {\n    maxWidth: 345,\n    margin: auto,\n    paddingBottom: \"40px\"\n  },\n  media: {\n    height: 300,\n  },\n  signal: {\n    margin: 'auto',\n    backgroundColor: \"#cddc39\",\n  },\n  carouselDivider: {\n      margin: \"10px 5px 10px 5px\"\n  },\n  personName: {\n    color: \"rgba(255, 255, 255, 0.9)\",\n    marginRight: \"20px\",\n    marginLeft: \"20px\"\n  },\n  organizationMembers: {\n    width: \"144px\",\n    margin: \"auto\"\n  }\n});\n\nexport default function OrganizationCard(props) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n        <Card className={classes.personOuterCard}>\n            <CardActionArea>\n                <CardMedia\n                className={classes.media}\n                image={props.picture}\n                title={props.name}\n                />\n                <CardContent>\n                <Typography className={classes.personName} gutterBottom variant=\"h5\" component=\"h2\">\n                    {props.name}\n                </Typography>\n                {(props.members.length > 0 ?\n                    <React.Fragment>\n                        <Typography className={classes.personDescription} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        You would be working with:\n                        </Typography>\n                        <AvatarGroup className={classes.organizationMembers} max={4}>\n                            {(\n                                props.members.map( (member) =>\n                                    <Avatar key={member.subjectId + props.id} alt={member.name} src={member.picture} />\n                                )\n                            )}\n                        </AvatarGroup>\n                    </React.Fragment>:\n                    <React.Fragment></React.Fragment>\n                )}\n                \n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button className={classes.signal} variant=\"contained\">Signal</Button>\n            </CardActions>\n        </Card>\n    </React.Fragment>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}